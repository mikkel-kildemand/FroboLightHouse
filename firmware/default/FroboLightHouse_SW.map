Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              avr_serial.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o)
                              rcnmea.o (atoi)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
                              rcnmea.o (itoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(mul10.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o) (__mulhi_const_10)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(utoa.o)
                              rcnmea.o (utoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

yellow_command      0x1               main.o
t1ms_cnt            0x2               main.o
pfbst_interval      0x2               main.o
green_signal        0x1               main.o
but1                0x1               main.o
yellow_state        0x1               main.o
led_state           0x1               main.o
yellow_count        0x1               main.o
nmea_ticks_l        0x4               main.o
ib_tail             0x2               avr_serial.o
led_signal          0x1               main.o
ib                  0x50              avr_serial.o
led_count           0x1               main.o
nmea_wd_timeout     0x2               main.o
t1ms                0x1               main.o
light_state         0x1               main.o
tx_busy             0x1               avr_serial.o
red_count           0x1               main.o
rx                  0xa0              rcnmea.o
state               0x1               main.o
yellow              0x2               main.o
green               0x2               main.o
rx_ite              0x2               rcnmea.o
voltage             0x2               main.o
red                 0x2               main.o
voltage_min         0x2               main.o
adc_ch              0x1               main.o
green_state         0x1               main.o
adc_ports           0x3               main.o
nmea_err            0x2               rcnmea.o
ib_head             0x2               avr_serial.o
nmea_ticks_r        0x4               main.o
tx                  0xa0              rcnmea.o
green_command       0x1               main.o
battery_low_warning
                    0x1               main.o
ob_tail             0x2               avr_serial.o
adc_data            0x6               main.o
nmea_wd             0x2               main.o
flash_running       0x1               main.o
next_light_state    0x1               main.o
ob                  0x50              avr_serial.o
solid_running       0x1               main.o
ob_head             0x2               avr_serial.o
tx_len              0x2               rcnmea.o
rx_len              0x2               rcnmea.o
red_state           0x1               main.o
green_count         0x1               main.o
yellow_signal       0x1               main.o
red_signal          0x1               main.o
FroboLightHouse_param_received
                    0x1               main.o
red_command         0x1               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
LOAD avr_serial.o
LOAD main.o
LOAD rcnmea.o
LOAD LightHouse.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1076
 *(.vectors)
 .vectors       0x00000000       0x94 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000094                . = ALIGN (0x2)
                0x00000094                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000094        0x0 linker stubs
 *(.trampolines*)
                0x00000094                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000094                __ctors_start = .
 *(.ctors)
                0x00000094                __ctors_end = .
                0x00000094                __dtors_start = .
 *(.dtors)
                0x00000094                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000094        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
                0x00000094                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000094        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000a0       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
                0x000000a0                __do_copy_data
 .init4         0x000000ba       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000ba                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000ca        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
 *(.init9)
 *(.text)
 .text          0x000000d2        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
                0x000000d2                __vector_22
                0x000000d2                __vector_28
                0x000000d2                __vector_1
                0x000000d2                __vector_24
                0x000000d2                __vector_12
                0x000000d2                __bad_interrupt
                0x000000d2                __vector_6
                0x000000d2                __vector_31
                0x000000d2                __vector_35
                0x000000d2                __vector_3
                0x000000d2                __vector_23
                0x000000d2                __vector_30
                0x000000d2                __vector_11
                0x000000d2                __vector_13
                0x000000d2                __vector_17
                0x000000d2                __vector_19
                0x000000d2                __vector_7
                0x000000d2                __vector_27
                0x000000d2                __vector_5
                0x000000d2                __vector_33
                0x000000d2                __vector_4
                0x000000d2                __vector_9
                0x000000d2                __vector_2
                0x000000d2                __vector_21
                0x000000d2                __vector_15
                0x000000d2                __vector_36
                0x000000d2                __vector_29
                0x000000d2                __vector_8
                0x000000d2                __vector_26
                0x000000d2                __vector_14
                0x000000d2                __vector_10
                0x000000d2                __vector_18
                0x000000d2                __vector_20
 .text          0x000000d6      0x2b6 avr_serial.o
                0x0000011a                __vector_32
                0x00000186                __vector_34
                0x0000037c                serial_rx_flush
                0x00000260                serial_tx
                0x000002bc                serial_tx_string
                0x0000020c                serial_tx_init
                0x00000326                serial_tx_idle
                0x0000034c                serial_rx
                0x000000d6                serial_init
                0x000002ac                serial_tx_direct
                0x0000032e                serial_rx_avail
 .text          0x0000038c      0x5e0 main.o
                0x00000548                button_init
                0x00000624                nmea_tx_status
                0x0000053c                button_update
                0x00000458                FroboLightHouse_Init
                0x00000558                state_update
                0x000004a2                voltage_update
                0x0000067c                sched_update
                0x000003ca                __vector_25
                0x000004e8                led_update
                0x000008ba                main
                0x000005e6                save_reset_source
                0x00000742                nmea_rx_parse
                0x00000460                adc_init
                0x0000052a                led_init
                0x00000810                nmea_init
                0x0000038c                sched_init
                0x000003a8                __vector_16
 .text          0x0000096c      0x3b6 rcnmea.o
                0x00000bf8                tx_inbuf
                0x0000096c                nmea_tx
                0x00000c8a                nmea_rx_next_val
                0x00000a64                nmea_tx_append_short
                0x00000aa6                nmea_rx_update
                0x00000c68                nmea_reset
                0x00000a22                nmea_tx_append_ushort
 .text          0x00000d22      0x24e LightHouse.o
                0x00000f6a                FroboLightHouse_RED_Update
                0x00000f6c                FroboLightHouse_YELLOW_Update
                0x00000f6e                FroboLightHouse_GREEN_Update
                0x00000d22                LightHouse_Update
 .text          0x00000f70        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .text          0x00000f70        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x00000f70        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text          0x00000f70        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o)
 .text          0x00000f70        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
 .text          0x00000f70        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(mul10.o)
 .text          0x00000f70        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(utoa.o)
 .text          0x00000f70        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
                0x00000f70                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000f70       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x00000f70                __udivmodhi4
 .text.libgcc   0x00000f98        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00000f98        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000f98       0x3c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o)
                0x00000f98                atoi
 .text.avr-libc
                0x00000fd4       0x42 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
                0x00000fd4                itoa
 .text.avr-libc
                0x00001016       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(mul10.o)
                0x00001016                __mulhi_const_10
 .text.avr-libc
                0x00001026       0x2c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(utoa.o)
                0x00001026                utoa
 .text.avr-libc
                0x00001052       0x20 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
                0x00001052                strrev
                0x00001072                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x00001072                exit
                0x00001072                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001072        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x00001076                _etext = .

.data           0x00800100        0x0 load address 0x00001076
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
 .data          0x00800100        0x0 avr_serial.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100        0x0 rcnmea.o
 .data          0x00800100        0x0 LightHouse.o
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(mul10.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(utoa.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100      0x22e
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtcan128.o
 .bss           0x00800100        0x0 avr_serial.o
 .bss           0x00800100        0x1 main.o
 .bss           0x00800101        0x0 rcnmea.o
 .bss           0x00800101        0x0 LightHouse.o
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(atoi.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(mul10.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(utoa.o)
 .bss           0x00800101        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800101       0xa9 avr_serial.o
                0x00800101                ib_tail
                0x00800103                ib
                0x00800153                tx_busy
                0x00800154                ib_head
                0x00800156                ob_tail
                0x00800158                ob
                0x008001a8                ob_head
 COMMON         0x008001aa       0x3c main.o
                0x008001aa                yellow_command
                0x008001ab                t1ms_cnt
                0x008001ad                pfbst_interval
                0x008001af                green_signal
                0x008001b0                but1
                0x008001b1                yellow_state
                0x008001b2                led_state
                0x008001b3                yellow_count
                0x008001b4                nmea_ticks_l
                0x008001b8                led_signal
                0x008001b9                led_count
                0x008001ba                nmea_wd_timeout
                0x008001bc                t1ms
                0x008001bd                light_state
                0x008001be                red_count
                0x008001bf                state
                0x008001c0                yellow
                0x008001c2                green
                0x008001c4                voltage
                0x008001c6                red
                0x008001c8                voltage_min
                0x008001ca                adc_ch
                0x008001cb                green_state
                0x008001cc                adc_ports
                0x008001cf                nmea_ticks_r
                0x008001d3                green_command
                0x008001d4                battery_low_warning
                0x008001d5                adc_data
                0x008001db                nmea_wd
                0x008001dd                flash_running
                0x008001de                next_light_state
                0x008001df                solid_running
                0x008001e0                red_state
                0x008001e1                green_count
                0x008001e2                yellow_signal
                0x008001e3                red_signal
                0x008001e4                FroboLightHouse_param_received
                0x008001e5                red_command
 COMMON         0x008001e6      0x148 rcnmea.o
                0x008001e6                rx
                0x00800286                rx_ite
                0x00800288                nmea_err
                0x0080028a                tx
                0x0080032a                tx_len
                0x0080032c                rx_len
                0x0080032e                PROVIDE (__bss_end, .)
                0x00001076                __data_load_start = LOADADDR (.data)
                0x00001076                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080032e        0x0
                0x0080032e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080032e                PROVIDE (__noinit_end, .)
                0x0080032e                _end = .
                0x0080032e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 avr_serial.o
 .debug_aranges
                0x00000020       0x20 main.o
 .debug_aranges
                0x00000040       0x20 rcnmea.o
 .debug_aranges
                0x00000060       0x20 LightHouse.o

.debug_pubnames
                0x00000000      0x706
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x120 avr_serial.o
 .debug_pubnames
                0x00000120      0x37d main.o
 .debug_pubnames
                0x0000049d       0xd1 rcnmea.o
 .debug_pubnames
                0x0000056e      0x198 LightHouse.o

.debug_info     0x00000000      0xd02
 *(.debug_info)
 .debug_info    0x00000000      0x240 avr_serial.o
 .debug_info    0x00000240      0x595 main.o
 .debug_info    0x000007d5      0x320 rcnmea.o
 .debug_info    0x00000af5      0x20d LightHouse.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x43f
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x108 avr_serial.o
 .debug_abbrev  0x00000108      0x15b main.o
 .debug_abbrev  0x00000263      0x157 rcnmea.o
 .debug_abbrev  0x000003ba       0x85 LightHouse.o

.debug_line     0x00000000      0xff2
 *(.debug_line)
 .debug_line    0x00000000      0x2a3 avr_serial.o
 .debug_line    0x000002a3      0x683 main.o
 .debug_line    0x00000926      0x373 rcnmea.o
 .debug_line    0x00000c99      0x359 LightHouse.o

.debug_frame    0x00000000      0x2b0
 *(.debug_frame)
 .debug_frame   0x00000000       0xc0 avr_serial.o
 .debug_frame   0x000000c0      0x120 main.o
 .debug_frame   0x000001e0       0x80 rcnmea.o
 .debug_frame   0x00000260       0x50 LightHouse.o

.debug_str      0x00000000      0x536
 *(.debug_str)
 .debug_str     0x00000000      0x160 avr_serial.o
                                0x199 (size before relaxing)
 .debug_str     0x00000160      0x2b7 main.o
                                0x39f (size before relaxing)
 .debug_str     0x00000417       0xa7 rcnmea.o
                                0x157 (size before relaxing)
 .debug_str     0x000004be       0x78 LightHouse.o
                                0x205 (size before relaxing)

.debug_loc      0x00000000      0x413
 *(.debug_loc)
 .debug_loc     0x00000000       0x92 avr_serial.o
 .debug_loc     0x00000092       0x3f main.o
 .debug_loc     0x000000d1      0x22a rcnmea.o
 .debug_loc     0x000002fb      0x118 LightHouse.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(FroboLightHouse_SW.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 rcnmea.o
